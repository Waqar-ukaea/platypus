---
name: BuildTest
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker-build-test-ubuntu:
    runs-on: ubuntu-latest
    name: BuildTestUbuntu
    env:
      PRCOMMITSHA: ${{ github.event.pull_request.head.sha }}
      PRREPOSITORY: ${{ github.event.pull_request.head.repo.full_name }}
    steps:
      # First check out the repository to get the docker file
      - name: Checkout
        uses: actions/checkout@v4
      # Print the context for this GitHub workflow
      - name: PrintGithubContext
        run: echo "${PRCOMMITSHA:-$GITHUB_SHA}" "${PRREPOSITORY:-$GITHUB_REPOSITORY}"
      # Now build in a container with all deps
      - name: DockerBuildTest
        run: |
             docker build -t ci-platypus-ubuntu \
                          --build-arg build_git_sha="${PRCOMMITSHA:-$GITHUB_SHA}" \
                          --build-arg build_git_repo="${PRREPOSITORY:-$GITHUB_REPOSITORY}" \
                          --build-arg coverage=true \
                          docker/platypus
      # - name: UploadCoverage
      #   run: |
      #     ci_env=$(bash <(curl -s https://codecov.io/env))
      #     # shellcheck disable=SC2086
      #     docker run $ci_env -e CI=true ci-platypus-ubuntu:latest \
      #            bash /opt/platypus/scripts/upload-coverage.sh
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      # Create Docker container and copy VTune results off container          
      - name: Start Docker Container
        run: |
          docker create --name vtune-container -t ci-platypus-ubuntu  
          mkdir -p /opt/results_summaries
          cd /opt/results_summaries
          docker cp vtune-container:/opt/platypus/vtune-results/regression_test_hotspots_summaries.tar /opt/results_summaries/results_summaries.tar 
          tar -xf /opt/results_summaries/results_summaries.tar
          rm results_summaries.tar

          mkdir -p /opt/full_results
          cd /opt/full_results
          docker cp vtune-container:/opt/platypus/vtune-results/regression_test_hotspots_full.tar /opt/results_full/results_full.tar
          tar -xf /opt/results_full/results_full.tar
          rm results_full.tar
          
          docker rm vtune-container
      
      # Upload VTune results artifacts    
      - name: Upload VTune results summary
        uses: actions/upload-artifact@v4
        with:
          name: Regression Tests results summaries
          path: /opt/results_summaries/
          if-no-files-found: error
      - name: Upload VTune full results
        uses: actions/upload-artifact@v4
        with:
            name: Regression Tests full results
            path: /opt/results_full/
            if-no-files-found: error
